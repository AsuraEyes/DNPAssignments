@page "/AdultsList"

@using Microsoft.AspNetCore.Components
@using System.Collections
@using BlazorClient.Data
@using BlazorClient.Models
@inject IAdultData AdultData
@inject NavigationManager NavMgr
@inject AuthenticationStateProvider Auth


<h1>Adults list</h1>
<p>
    Search Adult by name: <input type="text" @oninput="@(arg => SearchByName(arg))" style="width: 250px"/>
</p>

@if (adultsToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!adultsToShow.Any())
{
    <p>
        <em>No Adults exist. Please add some.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Adult ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Hair Color</th>
            <th>Eye Color</th>
            <th>Sex</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Job Title</th>
            <th>Salary</th>
            <AuthorizeView Policy="moderator">
                <th>Remove</th>
                <th>Edit</th>
            </AuthorizeView>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in adultsToShow)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.FirstName</td>
                <td>@item.LastName</td>
                <td>@item.HairColor</td>
                <td>@item.EyeColor</td>
                <td>@item.Sex</td>
                <td>@item.Age</td>
                <td>@item.Weight</td>
                <td>@item.Height</td>
                <td>@item.JobTitle.JobTitle</td>
                <td>@item.JobTitle.Salary</td>
                
                <AuthorizeView Policy="moderator">
                    <td>
                        <button @onclick="@(() => RemoveAdult(item.Id))">
                            <i class="oi oi-trash" style="color:red"></i>
                        </button>
                    </td>
                    <td>
                        <button @onclick="@(() => Edit(item.Id))">
                            <i class="oi oi-pencil" style="color:#1b6ec2"></i>
                        </button>
                    </td>
                </AuthorizeView>

            </tr>
        }
        </tbody>
    </table>
}

@code {
    private IList<Adult> adultsToShow;

    private string searchByName = "";

    protected override async Task OnInitializedAsync()
    {
        await ExecuteFilter2();
    }

    private async Task RemoveAdult(int adultId)
    {

        await AdultData.RemoveAdultAsync(adultId);
        await ExecuteFilter2();
    }

    private async Task SearchByName(ChangeEventArgs changeEventArgs)
    {
        searchByName = "";
        try
        {
            searchByName = changeEventArgs.Value.ToString();
        }
        catch (Exception)
        {
            // ignored
        }
        await ExecuteFilter2();
    }

    private async Task ExecuteFilter2()
    {
        adultsToShow = await AdultData.SearchFilterAsync(searchByName);
    }

    private void Edit(int id)
    {
        NavMgr.NavigateTo($"Edit/{id}");
    }

}