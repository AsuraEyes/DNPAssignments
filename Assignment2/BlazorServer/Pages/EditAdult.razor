@page "/EditAdult/{Id:int}"
@using BlazorServer.Persistence
@using BlazorServer.Models
@inject IFileAdapter FileAdapter
@inject NavigationManager NavigationManager
<h3>EditAdult</h3>
<EditForm Model="@adult" OnValidSubmit="@SaveAdultAsync">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        First name:
        <InputText type="text" @bind-Value="adult.FirstName"/>
    </div>
    <div class="form-group">
        Last name:
        <InputText type="text" @bind-Value="adult.LastName"/>
    </div>
    <div class="form-group">
        Sex:
        <InputText type="text" @bind-Value="adult.Sex"/>
    </div>
    <div class="form-group">
        Age:
        <InputNumber @bind-Value="adult.Age"/>
    </div>
    <div class="form-group">
        Job Title:
        <InputText type="text" @bind-Value="jobTitle"/>
    </div>
    <div class="form-group">
        Salary:
        <InputNumber @bind-Value="salary"/>
    </div>
    <div class="form-group">
        Height:
        <InputNumber @bind-Value="adult.Height"/>
    </div>
    <div class="form-group">
        Weight:
        <InputNumber @bind-Value="adult.Weight"/>
    </div>
    <div class="form-group">
        Hair Color:
        <InputText type="text" @bind-Value="adult.HairColor"/>
    </div>
    <div class="form-group">
        Eye Color:
        <InputText type="text" @bind-Value="adult.EyeColor"/>
    </div>
    <p class="actions">
        <button class="btn btn-outline-dark" type="submit">Save</button>
    </p>
</EditForm>

@code {
    private Adult adult = new();

    [Parameter]
    public int id { get; set; }

    private string jobTitle { get; set; }
    private int salary { get; set; }

    private async Task SaveAdultAsync()
    {
        adult.JobTitle = new Job
        {
            JobTitle = jobTitle,
            Salary = salary
        };
        await FileAdapter.UpdateAsync(adult);
        NavigationManager.NavigateTo("Adults");
    }

    protected override async Task OnInitializedAsync()
    {
        adult = await FileAdapter.GetAdultAsync(id);
        jobTitle = adult.JobTitle.JobTitle;
        salary = adult.JobTitle.Salary;
    }

}